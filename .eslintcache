[{"C:\\Users\\Digvijay Singh\\tech-assign\\src\\index.js":"1","C:\\Users\\Digvijay Singh\\tech-assign\\src\\App.js":"2","C:\\Users\\Digvijay Singh\\tech-assign\\src\\components\\Products.js":"3","C:\\Users\\Digvijay Singh\\tech-assign\\src\\components\\Customers.js":"4","C:\\Users\\Digvijay Singh\\tech-assign\\src\\components\\OrdersPage.js":"5","C:\\Users\\Digvijay Singh\\tech-assign\\src\\components\\OrdersNav.js":"6","C:\\Users\\Digvijay Singh\\tech-assign\\src\\components\\Loading.js":"7","C:\\Users\\Digvijay Singh\\tech-assign\\src\\components\\NavBar.js":"8"},{"size":168,"mtime":1607178514180,"results":"9","hashOfConfig":"10"},{"size":1312,"mtime":1607272909634,"results":"11","hashOfConfig":"10"},{"size":6745,"mtime":1607325535676,"results":"12","hashOfConfig":"10"},{"size":3256,"mtime":1607325555466,"results":"13","hashOfConfig":"10"},{"size":4479,"mtime":1607325393244,"results":"14","hashOfConfig":"10"},{"size":1235,"mtime":1607325352656,"results":"15","hashOfConfig":"10"},{"size":511,"mtime":1607272989178,"results":"16","hashOfConfig":"10"},{"size":601,"mtime":1607325344029,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1s2ba2n",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Digvijay Singh\\tech-assign\\src\\index.js",[],["36","37"],"C:\\Users\\Digvijay Singh\\tech-assign\\src\\App.js",[],"C:\\Users\\Digvijay Singh\\tech-assign\\src\\components\\Products.js",[],"C:\\Users\\Digvijay Singh\\tech-assign\\src\\components\\Customers.js",[],"C:\\Users\\Digvijay Singh\\tech-assign\\src\\components\\OrdersPage.js",["38","39"],"import React, { useState, useEffect } from \"react\";\r\nimport OrdersNav from \"./OrdersNav\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nfunction OrdersPage(props) {\r\n    const customerId = props.match.params.id;\r\n    const [customerName, setCustomerName] = useState(\"\");\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        props.setCustomerId(customerId);\r\n        // fetching orders for all the customers\r\n        axios\r\n            .get(\"http://localhost:5000/orders\")\r\n            .then(({ data }) => {\r\n                for (const customer in data) {\r\n                    if (data[customer].id === customerId) {\r\n                        setCustomerName(customer);\r\n                        setData(data[customer].data);\r\n                        break;\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n    useEffect(() => {\r\n        props.setName(customerName);\r\n    }, [customerName]);\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // grouping the orders based on their orderId\r\n        let groupedOrders = {};\r\n        data.forEach((item, index) => {\r\n            if (item.orderId in groupedOrders === false)\r\n                groupedOrders[item.orderId] = [];\r\n            groupedOrders[item.orderId].push(item);\r\n        });\r\n        let tempArray = [];\r\n        for (const order in groupedOrders) {\r\n            tempArray.push(groupedOrders[order]);\r\n        }\r\n        setOrders(tempArray);\r\n    }, [data]);\r\n\r\n    const orderRow =\r\n        orders !== undefined ? (\r\n            orders.map((order, index) => {\r\n                return (\r\n                    <tr key={index}>\r\n                        <th scope=\"row\">{index + 1}</th>\r\n                        <td>{order[0].orderId}</td>\r\n                        <td>{order[0].orderDate.slice(0, 10)}</td>\r\n                        <td>{order[0].orderDate.slice(11, -5)}</td>\r\n                        <td>\r\n                            <Link\r\n                                to={`/products/${order[0].orderId}`}\r\n                                type=\"button\"\r\n                                className=\"btn btn-outline-dark\"\r\n                                onClick={() => props.setOrder(order)}\r\n                                style={{ fontWeight: \"500\" }}\r\n                            >\r\n                                <i className=\"fas fa-info-circle\"></i> Details\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            })\r\n        ) : (\r\n            <tr></tr>\r\n        );\r\n\r\n    return (\r\n        <div>\r\n            <OrdersNav name={customerName} />\r\n            <div className=\"container dashboard card mt-5\">\r\n                <Link\r\n                    to=\"/\"\r\n                    className=\"btn btn-link\"\r\n                    style={{\r\n                        textDecoration: \"none\",\r\n                        textAlign: \"left\",\r\n                        fontWeight: \"500\",\r\n                        color:\"darkred\"\r\n                    }}\r\n                >\r\n                    <i className=\"fas fa-arrow-left\"></i> Back to Customer\r\n                    Panel...\r\n                </Link>\r\n                <div className=\"card-body clients\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-7\" style={{ fontWeight: \"bold\" }}>\r\n                            <i className=\"fas fa-users\"></i> {customerName}\r\n                            {\"  \"}\r\n                            Orders\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"table-responsive-lg\">\r\n                    <table className=\"table table-hover table-striped table-borderless\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"col\">S. No.</th>\r\n                                <th className=\"col\">Order ID</th>\r\n                                <th className=\"col\">Order Date</th>\r\n                                <th className=\"col\">Order Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>{orderRow}</tbody>\r\n                    </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(OrdersPage);\r\n","C:\\Users\\Digvijay Singh\\tech-assign\\src\\components\\OrdersNav.js",[],"C:\\Users\\Digvijay Singh\\tech-assign\\src\\components\\Loading.js",[],"C:\\Users\\Digvijay Singh\\tech-assign\\src\\components\\NavBar.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":26,"column":8,"nodeType":"46","endLine":26,"endColumn":10,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"48","line":29,"column":8,"nodeType":"46","endLine":29,"endColumn":22,"suggestions":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'customerId' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["52"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},{"desc":"56","fix":"57"},"Update the dependencies array to be: [customerId, props]",{"range":"58","text":"59"},"Update the dependencies array to be: [customerName, props]",{"range":"60","text":"61"},[962,964],"[customerId, props]",[1036,1050],"[customerName, props]"]